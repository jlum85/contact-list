{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["run();\n// The entire app is in a function just to make sure we don't polute the global namespace\nfunction run() {\n  const rootEl = getElementByIdOrThrow(\"root\");\n  // The list of contacts\n  let contacts = [\n    {\n      id: \"p9n51g\",\n      name: \"Alice\",\n      email: null\n    },\n    {\n      id: \"8mopn7\",\n      name: \"Bob\",\n      email: \"bob@gmail.com\"\n    },\n    {\n      id: \"u7oo0d\",\n      name: \"Paul\",\n      email: \"paul@gmail.com\"\n    }\n  ];\n  // Call createApp to initialize the App\n  // and get the contactsEl used for updates\n  const { contactsEl } = createApp();\n  // Make sure the App is updated at when stating\n  renderApp();\n  // This function create the HTML structure\n  // and add it to the root element in the DOM\n  function createApp() {\n    const titleEl = createElement(\"h1\", {\n      children: \"Contacts\",\n      className: \"title\"\n    });\n    const contactsEl = createElement(\"div\", { className: \"contacts\" });\n    const { addFormEl } = createAddForm();\n    const appEl = createElement(\"div\", {\n      className: \"app\",\n      children: [titleEl, contactsEl, addFormEl]\n    });\n    rootEl.appendChild(appEl);\n    return {\n      contactsEl\n    };\n  }\n  // Create the add form structure\n  function createAddForm() {\n    const inputNameEl = createElement(\"input\");\n    inputNameEl.placeholder = \"name\";\n    const inputEmailEl = createElement(\"input\");\n    inputEmailEl.placeholder = \"email\";\n    const addButtonEl = createElement(\"button\", {\n      children: \"Add\"\n    });\n    addButtonEl.addEventListener(\"click\", () => {\n      if (inputNameEl.value.length === 0) {\n        // no name, return to stop the function\n        return;\n      }\n      // add a contact\n      contacts.push({\n        id: randomShortId(),\n        name: inputNameEl.value,\n        email: inputEmailEl.value.length > 0 ? inputEmailEl.value : null\n      });\n      // then update the app\n      renderApp();\n      // and clear the inputs\n      inputNameEl.value = \"\";\n      inputEmailEl.value = \"\";\n    });\n    const addFormEl = createElement(\"div\", {\n      className: \"add\",\n      children: [inputNameEl, inputEmailEl, addButtonEl]\n    });\n    return { addFormEl };\n  }\n  // This function is used to update the App, mainly the list of contacts\n  function renderApp() {\n    renderContacts();\n  }\n  // This function update the list of contacts\n  function renderContacts() {\n    // clear the content of the container first\n    contactsEl.innerHTML = \"\";\n    // the create new elements\n    const contactItemEls = contacts.map(contact => {\n      const deleteEl = createElement(\"button\", {\n        className: \"remove\",\n        children: \"Delete\"\n      });\n      deleteEl.addEventListener(\"click\", () => {\n        // remove the contact\n        contacts = contacts.filter(c => c.id !== contact.id);\n        // and update the app\n        renderApp();\n      });\n      return createElement(\"div\", {\n        className: \"contact\",\n        children: [\n          createElement(\"div\", {\n            className: \"infos\",\n            children: [\n              createElement(\"h2\", { children: contact.name }),\n              contact.email === null\n                ? null\n                : createElement(\"p\", { children: contact.email })\n            ]\n          }),\n          deleteEl\n        ]\n      });\n    });\n    // and add them to the container\n    contactItemEls.forEach(elem => {\n      contactsEl.appendChild(elem);\n    });\n  }\n}\n/**\n * This function let you create an HTML element and add attributes and children\n */\nfunction createElement(type, props = {}) {\n  const elem = document.createElement(type);\n  if (props.className) {\n    elem.className = props.className;\n  }\n  if (props.children) {\n    const childrenArray = Array.isArray(props.children)\n      ? props.children\n      : [props.children];\n    childrenArray\n      .map(children => {\n        if (typeof children === \"string\") {\n          return document.createTextNode(children);\n        }\n        return children;\n      })\n      .map(item => {\n        if (item) {\n          elem.appendChild(item);\n        }\n      });\n  }\n  return elem;\n}\n/**\n * Like document.getElementById but throw an error\n * if the element does not exist\n */\nfunction getElementByIdOrThrow(id) {\n  const elem = document.getElementById(id);\n  if (!elem) {\n    throw new Error(`Cannot find element with id \"${id}\"`);\n  }\n  return elem;\n}\n/**\n * Return a short (5 chars) string ID\n */\nfunction randomShortId() {\n  return Math.random()\n    .toString(36)\n    .substring(7);\n}\n"]}